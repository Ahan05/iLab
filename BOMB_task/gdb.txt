Краткий список команд GDB для IA32

  Команда                  Эффект

Начало:
  gdb
  gdb <файл>

Запуск и остановка:

  run                       Запустить программу
  run 1 2 3                 Запустить программу с аргументами командной строки 1 2 3
  kill			    Остановить программу
  quit			    Выйти из gdb
  Ctrl-d		    Выйти из gdb
  	Примечание: Ctrl-C не выходит из gdb, но останавливает текущую
  	команду gdb

Точки останова

  break sum                 Поставить точку останова на входе в функцию sum
  break *0x40046b	    Поставить точку останова на адресе 0x40046b
  disable 1		    Отменить точку останова 1
			       (gdb нумерует точки останова, которые вы создаёте)
  enable 1		    Включить точку останова 1
  delete 1                  Удалить точку останова 1
  delete                    Удалить все точки останова
  clear sum		    Удалить все точки останова на входе в функцию sum


Выполнение

  stepi                     Выполнить одну инструкцию
  stepi 4                   Выполнить четыре инструкции
  nexti                     То же, что и stepi, но проскакивает
			    через вызовы функций
  step                      Выполнить одно выражение языка C
  continue                  Продолжить выполнение до следующей точки останова
  until 3                   Продолжить выполнение, пока программа не дойдёт до точки останова 3
  finish                    Продолжить выполнение до выхода из текущей функции
  call sum(1, 2)            Вызвать sum(1,2) и напечатать значение

Осмотр кода

  disas                     Дизассемблировать текущую функцию
  disas sum                 Дизассемблировать функцию sum
  disas 0x8048335           Дизассемблировать функцию возле 0x8048335
  disas 0x8048335 0x8048343 Дизассемблировать код в указанном промежутке адресов

  print /x $eip             Напечатать счётчик команд в шестнадцатеричном формате
  print /d $eip             Напечатать счётчик команд в десятичном формате
  print /t $eip             Напечатать счётчик команд в двоичном формате


Осмотр данных

  print /x $eax             Напечатать содержимое %eax в шестнадцатеричном формате
  print /d $eax             Напечатать содержимое %eax в десятичном формате
  print /t $eax             Напечатать содержимое %eax в двоичном формате
  print 0x100               Напечатать десятичное представление числа 0x100
  print /x 555              Напечатать шестнадцатеричное представление числа 555
  print /x ($esp+8)         Напечатать (содержимое %esp) + 8 в шестнадцатеричном формате
  print *(int *) 0xffffcca8 Напечатать целое число, расположенное по адресу 0xffffcca8
  print *(int *) ($esp+8)   Напечатать целое число, расположенное по адресу %esp + 8
  print (char *) 0xbfff890  Показать строку, хранящуюся по адресу 0xffffcca8

  x/w   0xffffcca8          Показать (4-байтное) слово, начинающееся по адресу
			    0xffffcca8
  x/w   $esp                Показать (4-байтное) слово, начинающееся по адресу, расположенному в $esp
  x/wd  $esp                Показать (4-байтное) слово, начинающееся по адресу, расположенному в $esp.
			    Напечатать в десятичном формате
  x/2w  $esp                Показать два (4-байтных) слова, начинающихся по адресу, расположенному
			    в $esp
  x/2wd $esp                Показать два (4-байтных) слова, начинающихся по адресу, расположенному
			    в $esp. Напечатать в десятичном формате
  x/g   $esp                Показать (8-байтное) слово, начинающееся по адресу, расположенному в $esp.
  x/gd  $esp                Показать (8-байтное) слово, начинающееся по адресу, расположенному в $esp.
			    Напечатать в десятичном формате
  x/a   $esp                Показать адрес, расположенный в $esp. Напечатать как отступ от предыдущего
			    глобального символа.
  x/s   0xffffcca8          Показать строку, хранящуюся по адресу 0xffffcca8
  x/20b sum                 Показать первые 20 байт кода инструкций функции sum
  x/10i sum                 Показать первые 10 инструкций функции sum

  (Примечание: строка с форматом для команды `x' имеет общий вид
     x/[ЧСЛО][РАЗМЕР][ФОРМАТ], где
 
    ЧСЛО  = число объектов, которые следует отобразить
    РАЗМЕР = размер каждого объекта (b=байт, h=полслова, w=слово,
	                        g=гигант (четверное слово))
    ФОРМАТ = как отобразить каждый объект (d=десятичн., x=шестнадцатерич., o=восьмерич. и т.д.)

    Если вы не указали РАЗМЕР или ФОРМАТ, будет использоваться или значение
	по умолчанию, или то значение, которые вы указали в предыдущей
	команде `print' или `x'.
  )

Полезная информация

  backtrace		    Напечатать текущий адрес и стек вызовов
  where			    Напечатать текущий адрес и стек вызовов

  info program		    Напечатать текущий статус программы
  info functions	    Напечатать функции, содержащиеся в программе
  info stack		    Напечатать стек (историю) вызовов
  info frame		    Напечатать информацию о текущем фрейме стека
  info registers	    Напечатать регистры и их содержимое
  info breakpoints	    Напечатать статус выставляемых пользователем точек останова

  display /FMT EXPR         Отобразить выражение EXPR в формате FMT
			    каждый раз, когда gdb останавливается
  undisplay                 Отключить отображение выражений каждый раз (см. display)
  help                      Получить информацию о gdb

  set disassembly-flavor intel - Set Intel style

  tty /dev/pts/x          Set terminal window (command "who is i" - request of terminal name)


